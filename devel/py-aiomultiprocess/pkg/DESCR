On their own, AsyncIO and multiprocessing are useful, but limited:
AsyncIO still can't exceed the speed of GIL, and multiprocessing only
works on one task at a time. But together, they can fully realize their
true potential.

aiomultiprocess presents a simple interface, while running a full
AsyncIO event loop on each child process, enabling levels of concurrency
never before seen in a Python application. Each child process can
execute multiple coroutines at once, limited only by the workload and
number of cores available.
